import org.gradle.kotlin.dsl.accessors.GradleType

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    apply from: 'versions.gradle'
    apply from: 'configs.gradle'

    repositories {
        google()
        jcenter()
        maven { url "https://oss.jfrog.org/libs-snapshot" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"

        classpath "com.android.tools.build:gradle:${versions.gradle}"


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://oss.jfrog.org/libs-snapshot" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

class AppGenerate extends DefaultTask {
    @Option(option="funky", description="test")
    String myOption

    @TaskAction
    void generate() {
        apply from: 'appConfig.gradle'

        dependsOn 'clean'
        dependsOn 'build'
        dependsOn 'bundleRelease'
        tasks.findByName('assembleRelease').mustRunAfter 'clean'
        tasks.findByName('bundleRelease').mustRunAfter 'assembleRelease'
    }
}

task generateApp(type: GradleBuild) {
    apply from: 'appConfig.gradle'

    tasks = ['clean', 'build', 'bundleRelease']
}

//tasks.register("generateApp", AppGenerate) {
//    group = 'Automation'
//    description = 'Automatic generate app bundle'
//}
